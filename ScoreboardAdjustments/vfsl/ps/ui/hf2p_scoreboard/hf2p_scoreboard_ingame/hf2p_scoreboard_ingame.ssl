import ssl.lib.ui.ui_widget_container
import ssl.hf2p.engine_ctrl
import ssl.hf2p.ui_globals
import ssl.hf2p.user_data

class UiScoreboardIngame : UiWidgetContainer
   
handle OnEnterState("Initial")
   Widgets().resultsHeader.visible := false
   Props().visible := false
end

handle OnEnteringState("Visible")
   Widgets().resultsHeader.visible  := true
   Widgets().resultsHeader.tf := "ingame_scoreboard_heading_scoring"
   Props().visible := true
end

handle OnEnteringState("PreGameVisible")
   Widgets().resultsHeader.visible  := false
   Props().visible := true
end

handle OnEnteringState("PostGameVisible")
   Widgets().resultsHeader.visible := true
   Widgets().resultsHeader.tf := "ingame_scoreboard_heading_results"
   GotoAndPlay("fadeIn")
   Widgets().list.StartDefaultBlinking(0.2)
   Widgets().PersonalStats.StartDefaultBlinking(0.2)
   Props().visible := true
end

handle OnLeavingState("PostGameVisible")
   GotoAndPlay("fadeOut")
end
end

class UiScoreboardTeamsVM
   var teams      : ObservableProperty = $OM.Calculated(this, "GetTeams")
   
   func GetTeams() : vector
      $UiGlobals.gameplay.scoreboard.version.Get()
      var i : int
      for i := 0 to $UiGlobals.gameplay.scoreboard.scoreboard_teams.Get().Count() - 1
         var team : GL_ScoreboardTeam = (GL_ScoreboardTeam)$UiGlobals.gameplay.scoreboard.scoreboard_teams.Get().Get(i)
         team.SetIdx(i)
      end
      return $UiGlobals.gameplay.scoreboard.scoreboard_teams.Get()
   end
   
   func IsTeamMode() : bool
      return $UiIngame.IsTeamMode()
   end


   // I've tweaked the team headers a lot so here's a summary.
   // Previously the headers were fixed to red (0) and blue (1).
   // Now, the first header displays the player/team in first place, and the second displays the local player/team.
   // If the local player takes first place, the headers swap, and the first header will then display the player/team in second place.
   // So basically, it's like the scoreboard on the HUD.
   // I had to add a lot of functions to do this, so most of the scripting below here is new.
   // -Alex-231
   
   //Returns the team in first place. Renamed from "GetLeadingTeam()"
   func GetFirstTeam() : int
      var ret : int = 0
        $UiGlobals.gameplay.scoreboard.version.Get()
        if ($UiGlobals.gameplay.scoreboard.teams_ranking.indices.Get().Count() > 0)
            ret := $UiGlobals.gameplay.scoreboard.teams_ranking.indices.Get().Get(0).value.Get()
        end
      return ret
   end


   // Returns the team in second place.
   func GetSecondTeam() : int
      var ret : int = 0
        $UiGlobals.gameplay.scoreboard.version.Get()
        if ($UiGlobals.gameplay.scoreboard.teams_ranking.indices.Get().Count() > 0)
            ret := $UiGlobals.gameplay.scoreboard.teams_ranking.indices.Get().Get(1).value.Get()
        end
      return ret
   end

   //Returns the player's team.
   func GetMyTeam() : int
      var ret : int = 0
      ret := (int)$UiIngame.team_index.Get()
      return ret
   end

   //Returns the name to display on header two.
   func GetHeaderTwoName() : string
        var ret : string = ""
        //If teams are enabled, and the player is in the lead, grab the second place team.
        if (IsTeamMode())
           $UiGlobals.gameplay.scoreboard.version.Get()
           if (teams.Get().Get(GetMyTeam()) != null)
               ret := teams.Get().Get(GetMyTeam()).GetHeaderName()
           end
        else
            var scoreboardPlayer : GL_ScoreboardPlayer = $UiGlobals.gameplay.scoreboard.FindPlayer($UserDataStorage.local_user.uid.Get())
            ret := (string)(scoreboardPlayer.name.Get())
        end
        return ret
   end

   //Returns the name to display on header one.
   func GetHeaderOneName() : string
        var ret : string = ""
        var indices : vector = $UiGlobals.gameplay.scoreboard.ffa_players_ranking.indices.Get()
        if (IsTeamMode() and GetFirstTeam() == GetMyTeam()) //If teams are enabled, and the player's team is in first place, grab the scond place team name.
           $UiGlobals.gameplay.scoreboard.version.Get()
           if (teams.Get().Get(GetSecondTeam()) != null)
               ret := teams.Get().Get(GetSecondTeam()).GetHeaderName()
           end
        elif (IsTeamMode()) //Else if teams are enabled and the player's team is not in first place, grab the first place team name.
           $UiGlobals.gameplay.scoreboard.version.Get()
           if (teams.Get().Get(GetFirstTeam()) != null)
               ret := teams.Get().Get(GetFirstTeam()).GetHeaderName()
           end
        elif ($UserDataStorage.IsEqualUIDs($UiGlobals.gameplay.scoreboard.scoreboard_players.Get().Get(((indices.Get(0)).value.Get())).uid.Get(), $UserDataStorage.local_user.uid.Get())) //Else if the player is in the lead, display second place player name
            var scoreboardPlayer : GL_ScoreboardPlayer = $UiGlobals.gameplay.scoreboard.FindPlayer($UiGlobals.gameplay.scoreboard.scoreboard_players.Get().Get(((indices.Get(1)).value.Get())).uid.Get())
            if (scoreboardPlayer != null)
                 ret := (string)(scoreboardPlayer.name.Get())
            end
        else //Else get the local player's name.
            var scoreboardPlayer : GL_ScoreboardPlayer = $UiGlobals.gameplay.scoreboard.FindPlayer($UiGlobals.gameplay.scoreboard.scoreboard_players.Get().Get(((indices.Get(0)).value.Get())).uid.Get())
            if (scoreboardPlayer != null)
                 ret := (string)(scoreboardPlayer.name.Get())
            end
        end
        return ret
   end

   //Same as above but returns score.
   func GetHeaderOneScore() : string
        var ret : string = ""
        var indices : vector = $UiGlobals.gameplay.scoreboard.ffa_players_ranking.indices.Get()
        if (IsTeamMode() and GetFirstTeam() == GetMyTeam())
           $UiGlobals.gameplay.scoreboard.version.Get()
           if (teams.Get().Get(GetSecondTeam()) != null)
               ret := teams.Get().Get(GetSecondTeam()).scoreTxt.Get()
           end
        elif (IsTeamMode())
           $UiGlobals.gameplay.scoreboard.version.Get()
           if (teams.Get().Get(GetFirstTeam()) != null)
               ret := teams.Get().Get(GetFirstTeam()).scoreTxt.Get()
           end
        elif ($UserDataStorage.IsEqualUIDs($UiGlobals.gameplay.scoreboard.scoreboard_players.Get().Get(((indices.Get(0)).value.Get())).uid.Get(), $UserDataStorage.local_user.uid.Get())) //Else if the player is in the lead, display second place player name
            var scoreboardPlayer : GL_ScoreboardPlayer = $UiGlobals.gameplay.scoreboard.FindPlayer($UiGlobals.gameplay.scoreboard.scoreboard_players.Get().Get(((indices.Get(1)).value.Get())).uid.Get())
            if (scoreboardPlayer != null)
                 ret := (string)(scoreboardPlayer.score.Get())
            end
        else
            var scoreboardPlayer : GL_ScoreboardPlayer = $UiGlobals.gameplay.scoreboard.FindPlayer($UiGlobals.gameplay.scoreboard.scoreboard_players.Get().Get(((indices.Get(0)).value.Get())).uid.Get())
            if (scoreboardPlayer != null)
                 ret := (string)(scoreboardPlayer.score.Get())
            end
        end
        return ret
   end

   //Returns the player or the player's team's score.
   func GetHeaderTwoScore() : string
        var ret : string = ""
        var indices : vector = $UiGlobals.gameplay.scoreboard.ffa_players_ranking.indices.Get()
        if (IsTeamMode())
           $UiGlobals.gameplay.scoreboard.version.Get()
           if (teams.Get().Get(GetMyTeam()) != null)
               ret := teams.Get().Get(GetMyTeam()).scoreTxt.Get()
           end
        else
            var scoreboardPlayer : GL_ScoreboardPlayer = $UiGlobals.gameplay.scoreboard.FindPlayer($UserDataStorage.local_user.uid.Get())
            ret := (string)(scoreboardPlayer.score.Get())
        end
        return ret
   end

   //The icon to go on header one. I was messing with these before but now these functions are irrelevant. Kept in case they're required later.
   func GetFirstIcon() : string
      var ret     : string
      //ret := "unicornEmblem"
      ret := ""
      return ret
   end

   func GetSecondIcon() : string
      var ret     : string
      //ret := "tigerEmblem"
      ret := ""
      return ret
   end
   
   //redLeads and blueLeads just represent the order of the headers, and have no relation to teams or colors.
   func GetAnim() : string
      var ret     : string = "redLeads"
      var indices : vector = $UiGlobals.gameplay.scoreboard.ffa_players_ranking.indices.Get()
      var leadingTeam : int = GetFirstTeam()
      var myTeam : int = GetMyTeam()
      
      //If there's no player or team ranking read, return.
      if(indices.Count() < 0 and $UiGlobals.gameplay.scoreboard.teams_ranking.indices.Get().Count() < 0)
         return ret
      end

      if (IsTeamMode() and leadingTeam = myTeam)
         ret := "redLeads"
      elif (IsTeamMode())
         ret := "blueLeads"
      elif ($UserDataStorage.IsEqualUIDs($UiGlobals.gameplay.scoreboard.scoreboard_players.Get().Get(((indices.Get(0)).value.Get())).uid.Get(), $UserDataStorage.local_user.uid.Get()))
         ret := "redLeads"
      else
         ret := "blueLeads"
      end

      return ret
   end
end